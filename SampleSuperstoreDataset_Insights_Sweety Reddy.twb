<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0ok8zj10r22f7l11vkra30v1sx6b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.11idnw70nfe8tq1a1u1re0335a24'>
            <connection class='textscan' directory='C:/Users/500069768/Downloads' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11idnw70nfe8tq1a1u1re0335a24' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11idnw70nfe8tq1a1u1re0335a24' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Percentile Earnings' datatype='real' name='[Calculation_3204592632250638336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='PERCENTILE([Sales],0.8)' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (City,Segment,Sub-Category)' hidden='true' name='[Action (City,Segment,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Segment]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Sub-Category)' hidden='true' name='[Action (Region,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment,Ship Mode)' hidden='true' name='[Action (Segment,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_EFD5C55F9DE94C85A1AE38D6EC912F22'>
            <properties context=''>
              <relation connection='textscan.11idnw70nfe8tq1a1u1re0335a24' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='(2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='(3)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='(1)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#baf539' fontsize='18'>AUTHOR: M. Sweety Reddy</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#e15759'>EXPLORATORY DATA ANALYSIS</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true'>1. Scatter Plot</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0ok8zj10r22f7l11vkra30v1sx6b' />
          </datasources>
          <datasource-dependencies datasource='federated.0ok8zj10r22f7l11vkra30v1sx6b'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Attribute' name='[attr:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Region,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Segment]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[Ship Mode]' member='&quot;Second Class&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Region,Sub-Category)]</column>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='background-color' value='#baf539' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' />
              <lod column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[attr:Category:nk]' />
              <lod column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Quantity:qk]' />
              <lod column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1095' />
                <format attr='maxwidth' value='1095' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1095' />
                <format attr='maxwidth' value='1095' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1095' />
                <format attr='maxwidth' value='1095' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1095' />
                <format attr='maxwidth' value='1095' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1095' />
                <format attr='maxwidth' value='1095' />
                <format attr='minheight' value='650' />
                <format attr='maxheight' value='650' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Profit:qk]</rows>
        <cols>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{9FA14D79-8D4A-4784-8DF4-9C295ECBD48F}' />
    </worksheet>
    <worksheet name='(2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>2. Line graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0ok8zj10r22f7l11vkra30v1sx6b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ok8zj10r22f7l11vkra30v1sx6b'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Segment]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[Ship Mode]' member='&quot;Second Class&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[avg:Sales:qk]' included-values='in-range'>
            <min>0.876</min>
            <max>17499.950000000001</max>
          </filter>
          <slices>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[avg:Sales:qk]</column>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk]' value='11' />
            <format attr='height' field='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Quantity:qk]' value='51' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1058' />
                <format attr='maxwidth' value='1058' />
                <format attr='minheight' value='116' />
                <format attr='maxheight' value='116' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1058' />
                <format attr='maxwidth' value='1058' />
                <format attr='minheight' value='113' />
                <format attr='maxheight' value='113' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Region:nk] * [federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk])</rows>
        <cols>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{9E0FC84C-7907-47AA-B43A-4E2DF6FDA131}' />
    </worksheet>
    <worksheet name='(3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>3. Bubble graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0ok8zj10r22f7l11vkra30v1sx6b' />
          </datasources>
          <datasource-dependencies datasource='federated.0ok8zj10r22f7l11vkra30v1sx6b'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Consumer&quot;</bucket>
              <bucket>&quot;Corporate&quot;</bucket>
              <bucket>&quot;Home Office&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Discount:qk]' />
              <text column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' />
              <text column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Ship Mode:nk]' />
              <color column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1B955831-C165-49E1-8B54-A97724F5F418}' />
    </worksheet>
    <worksheet name='(4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>4. Stacked Bar graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0ok8zj10r22f7l11vkra30v1sx6b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ok8zj10r22f7l11vkra30v1sx6b'>
            <column caption='Percentile Earnings' datatype='real' name='[Calculation_3204592632250638336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='PERCENTILE([Sales],0.8)' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3204592632250638336]' derivation='User' name='[usr:Calculation_3204592632250638336:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Segment]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[Ship Mode]' member='&quot;Second Class&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='union'>
                <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Holyoke&quot;' />
                <groupfilter from='&quot;Houston&quot;' function='range' level='[none:City:nk]' to='&quot;Independence&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Inglewood&quot;' />
                <groupfilter from='&quot;Johnson City&quot;' function='range' level='[none:City:nk]' to='&quot;Kenosha&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Kissimmee&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;La Crosse&quot;' />
                <groupfilter from='&quot;Laguna Niguel&quot;' function='range' level='[none:City:nk]' to='&quot;Las Vegas&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Lawton&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Layton&quot;' />
                <groupfilter from='&quot;Lebanon&quot;' function='range' level='[none:City:nk]' to='&quot;Lorain&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Lowell&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Lubbock&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Madison&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Malden&quot;' />
                <groupfilter from='&quot;Mansfield&quot;' function='range' level='[none:City:nk]' to='&quot;Meriden&quot;' />
                <groupfilter from='&quot;Mesa&quot;' function='range' level='[none:City:nk]' to='&quot;New Rochelle&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Newark&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Newport News&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Noblesville&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Norfolk&quot;' />
                <groupfilter from='&quot;Norman&quot;' function='range' level='[none:City:nk]' to='&quot;Omaha&quot;' />
                <groupfilter from='&quot;Orange&quot;' function='range' level='[none:City:nk]' to='&quot;Orland Park&quot;' />
                <groupfilter from='&quot;Ormond Beach&quot;' function='range' level='[none:City:nk]' to='&quot;Owensboro&quot;' />
                <groupfilter from='&quot;Palatine&quot;' function='range' level='[none:City:nk]' to='&quot;Redondo Beach&quot;' />
                <groupfilter from='&quot;Reno&quot;' function='range' level='[none:City:nk]' to='&quot;Santa Ana&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Santa Fe&quot;' />
                <groupfilter from='&quot;Scottsdale&quot;' function='range' level='[none:City:nk]' to='&quot;Sierra Vista&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Skokie&quot;' />
                <groupfilter from='&quot;South Bend&quot;' function='range' level='[none:City:nk]' to='&quot;Superior&quot;' />
                <groupfilter from='&quot;Taylor&quot;' function='range' level='[none:City:nk]' to='&quot;Vallejo&quot;' />
                <groupfilter from='&quot;Virginia Beach&quot;' function='range' level='[none:City:nk]' to='&quot;Waco&quot;' />
                <groupfilter from='&quot;Washington&quot;' function='range' level='[none:City:nk]' to='&quot;Waterloo&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Waukesha&quot;' />
                <groupfilter from='&quot;Waynesboro&quot;' function='range' level='[none:City:nk]' to='&quot;Westfield&quot;' />
                <groupfilter from='&quot;Wheeling&quot;' function='range' level='[none:City:nk]' to='&quot;Wichita&quot;' />
                <groupfilter from='&quot;Wilson&quot;' function='range' level='[none:City:nk]' to='&quot;Woodland&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Woonsocket&quot;' />
                <groupfilter function='member' level='[none:City:nk]' member='&quot;Yucaipa&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</column>
            <column>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[Action (Segment,Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[usr:Calculation_3204592632250638336:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[usr:Calculation_3204592632250638336:qk]</rows>
        <cols>([federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk] / [federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{4F41722D-E6B4-483F-BA88-98F41D258680}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98934' x='533' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='88267' x='533' y='1000'>
              <zone h='98000' id='3' name='(2)' w='44134' x='44666' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='9' name='(1)' w='44133' x='533' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='10667' x='88800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='48375' id='8' name='(2)' pane-specification-id='2' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' w='10667' x='88800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='15' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='vert' w='98934' x='533' y='1000'>
                <zone fixed-size='280' h='98000' id='9' is-fixed='true' name='(1)' w='44133' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='(2)' w='44134' x='44666' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='48375' id='8' name='(2)' pane-specification-id='2' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' w='10667' x='88800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{709C72EC-FA7F-4CB3-9703-607C062A8771}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98934' x='533' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='88267' x='533' y='1000'>
              <zone h='38375' id='3' name='(3)' w='22067' x='533' y='60625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='59625' id='9' name='(4)' w='88267' x='533' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' forceUpdate='' h='38375' id='14' param='https://www.smartinsights.com/digital-marketing-strategy/customer-segmentation-targeting/segmentation-targeting-and-positioning/' w='44133' x='44667' y='60625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='38375' id='15' is-centered='0' is-scaled='1' param='C:/Users/500069768/Desktop/demographic.jpg' w='22067' x='22600' y='60625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='10667' x='88800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11625' id='8' name='(3)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' w='10667' x='88800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='86375' id='10' name='(4)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' w='10667' x='88800' y='12625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='19' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='18' param='vert' w='98934' x='533' y='1000'>
                <zone fixed-size='280' h='59625' id='9' is-fixed='true' name='(4)' w='88267' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='86375' id='10' name='(4)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' w='10667' x='88800' y='12625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38375' id='3' is-fixed='true' name='(3)' w='22067' x='533' y='60625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11625' id='8' name='(3)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' w='10667' x='88800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='38375' id='15' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/500069768/Desktop/demographic.jpg' w='22067' x='22600' y='60625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='web' _.fcp.SetMembershipControl.true...type-v2='web' fixed-size='280' forceUpdate='' h='38375' id='14' is-fixed='true' param='https://www.smartinsights.com/digital-marketing-strategy/customer-segmentation-targeting/segmentation-targeting-and-positioning/' w='44133' x='44667' y='60625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F4174B27-31B0-462F-9699-A287711FC357}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='99000' x='500' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='89000' x='500' y='1000'>
              <zone h='49000' id='17' name='(2)' w='89000' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='18' name='(1)' w='44500' x='500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='20' name='(4)' w='44500' x='45000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='10000' x='89500' y='1000'>
              <zone h='28750' id='9' name='(3)' w='10000' x='89500' y='1000'>
                <layout-cache fixed-size-w='137' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11625' id='10' name='(3)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' w='10000' x='89500' y='29750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28812' id='19' name='(1)' pane-specification-id='8' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' w='10000' x='89500' y='41375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28813' id='21' name='(4)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' w='10000' x='89500' y='70187'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='25' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='24' param='vert' w='99000' x='500' y='1000'>
                <zone fixed-size='280' h='49000' id='18' is-fixed='true' name='(1)' w='44500' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28812' id='19' name='(1)' pane-specification-id='8' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' w='10000' x='89500' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='20' is-fixed='true' name='(4)' w='44500' x='45000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28813' id='21' name='(4)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' w='10000' x='89500' y='70187'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='222' h='28750' id='9' is-fixed='true' name='(3)' w='10000' x='89500' y='1000'>
                  <layout-cache fixed-size-w='137' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11625' id='10' name='(3)' pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' w='10000' x='89500' y='29750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='17' is-fixed='true' name='(2)' w='89000' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C074C4D-035C-4B4B-BA6A-3627D26F5A9A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='(1)'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='246'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[:Measure Names]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Category:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Country:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Postal Code:ok]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Ship Mode:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:State:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0DE9B79-40F8-4757-BE84-9355A6F9AFE2}' />
    </window>
    <window class='worksheet' name='(2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Category:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Country:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Region:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:State:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1A8AF4D-9834-4667-A22D-9FDC6F7AECBC}' />
    </window>
    <window class='worksheet' name='(3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Postal Code:ok]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8742ED3-7B91-48FD-B669-BD2B05B92914}' />
    </window>
    <window class='worksheet' name='(4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:State:nk]</field>
            <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Discount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{531EDEF1-62E8-431E-A2A1-3737A8BC4F32}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='(1)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(2)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Quantity:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Region:nk]</field>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Region:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Quantity:qk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Sales:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Central&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>55</value>
                  <value>3792.4949999999999</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3343DDA7-E843-409E-B612-056012BB49D8}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='(3)'>
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='(4)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[usr:Calculation_3204592632250638336:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[usr:Calculation_3204592632250638336:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;Home Office&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>18275.044000000002</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{0782DEA5-149E-46AD-9263-393D9874D9CF}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='(1)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='(2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='(3)'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Ship Mode:nk]</field>
                    <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[sum:Discount:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Consumer&quot;</value>
                  <value>&quot;Second Class&quot;</value>
                  <value>145.16000000000022</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:Segment:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='(4)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ok8zj10r22f7l11vkra30v1sx6b].[none:City:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{1D62B02D-6C58-4E0C-A4D9-158FB52DE1B2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(1)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='(4)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAeVklEQVR4nO2dWXMc2ZXff7lW1l4FFAo7QQJcmk2yyaZaslqyWxrNaDwKz0x4QvYowg7b
      ctgv9pu+gENhfwM/2U92+EXhiJkXhWYc47FGW49aGrWmuRP7XkAVat8rqyoz/QCSDRBkMxON
      wlb3F4EAqnBu5rmZ+c97896T90iO4zgIBH2KfNIOCAQniRCAoK8RAhC8lmohzS8+/JD17Zzn
      sh2zRrHSePG5XcvxYHYVgNX5x/ztL39FtdkBoFFKs5LKv7A1awU+/PBDUjulF99ls9lD1uKz
      UXuyVcG5YG3uAZZvktFBPz/58Y/RwwMoZol0sc7USJxCtUaXAH6/jmTWsLQwTjNP27RIJH38
      /VyLf/Mv/whdhsXZOYavvQfAgwcPuPX+N3j693/H5ekk92fXWE/XWL94ga+9f5cPf/Zz7n7j
      D4koLT76219gK34+/uhn/Mm3v838/BKRwSRmMU2m2uH2zAhr2zkmRob4ZH6NcDDCF29MUrRj
      vDU19MY6ihZA8Fou3/kq03GbP/vBD3iwtIWq2Gxmqxhyl3w+z9TMJD4jQT09x989WETVVIrV
      JkOGghSJMTNzBU0CcMhU2yTDPgC+8fvfIvXgQ3768VPq1SL5SpMLl69T2tng4SefYEkS7XaH
      cmaTzWyV1Y0UExcuEmxnmUuVUKUmmYqN024wu7jKrWsTPHrwkMGpG9y9GObP/uo3jA7HXdVR
      tACC19KoFNnKVvj6P/lnpFdmCcQSKO06Hz+Y4/e/+bsMDMTw+6Az8QEXLmWx/VFGE7cJ6yr6
      wCALlVk6DnTyawQGLyI92+7O9ibqwBTf+aNbZPJF7tx6h9zOFhffe59L40neun6Ze/fvMzox
      wcTIEPHEILrVoBUe5ktXO0QHxhkv1/j4aYV/9e0/4OnSJt/45u/RkMMkw8PE76eIGu4ubalX
      w6CmaeLz+XqxacGJ4bC9sYopB5gaH35xQb+JZq2KYgTR1aPqcDhsrCwiBQaYGB7c959iNo0W
      HiRkaK621DMBVCoVIpFILzYtOANUSgUkzU846D9pVz4T0QUSHDmVbIpUuctYUiOztU5XDhDU
      IZsvMjk5weraOhPj4yBJ2HaXXHoHWdNwZJ2RgQCpnTLjw3HyxTojE6M9vUiFAARHTqlSY2Ji
      mqBisbXdRnWqFG2ZqZEwayspmt0OlVIe05bpdGpYVhizniMYCjH7ZA3LkbDNMmr8Ys8vUCEA
      wZEzNj7Gw9knDA2P4LRrNGWDeDSMzzAIhFSsUp0uKvlMioGRJEEjSMfoomka+uAANRNiMT/+
      eO+70D17BiiXy+IhWHDq6WkLIEluxwkEgpPBkwCa1RKrG1s02jYRn0O1LXFpNM5qaofhiYvk
      t1aQfBHevjqN4zgoitIrvwWCI8GTAPzhGGOJKnUlSC1fZjxksZqvcuvOTeafPCQYnUBql7Bk
      GVmWUVXxiCE43XicmXDYztcYGYjRblXIVOvEfTLrqxuoxgDVcoZKq4247wvOCh4fgh3a7Q66
      rtNuNTC7EAoalEplorEYrXoVSTPw+3QxESY4E4iZYEFfI6JBBX2NEICgrxECEPQ1QgCCvkYI
      QNDXCAEI+hpPU7XF7DapTIELU5PMPZ0jOTYJrRKFapOLU+Msr20RT4wwPTnSK38FgiPFkwA2
      NjZRfT6KpRqGoVOt1dBlmauXxnn4eI13vvJFNhfmse0ktm3T7XZ75bdAcCR4EkAkHALdT7NZ
      JxYbJJsvoOqwsZVmZCTG6tIKOCqyiAUSnBE8zQQ7jk2lXCUcCVOvVdGMAJrs0Gh1CAUD1KoV
      AqEIiiyJmWDBmUCEQgj6GjEKJOhrRCf9DTiWjZ0puraXZBl5xN2qZIKTRwjgTXQt7Pkt9/aa
      IgRwhhBdIEFfIwQg6GuEAAR9jRCAoK/xJIBOs8aTx0+oNFoszj1lM52jsLPF49kFOh2TJ48e
      kCvVe+WrQHDkeBoFmp+fR9IMGuUcejhJvZSjhsNkIszDTx4xfedd0isLDESuYNs2lmX1yu/j
      w7Y9FzkX9e4TvA2DygrTM1M8ffCY2OhFbGf34rAsC0WRsbpdHGd3RbjnP2eeQ9ThXNS7T/Ak
      gKtXZlhcWufKzdvkt9aJD40SkNtsF+rcvH2TpYUFRienX1z8snz2HzGcQ1zM56He/YKIBXoD
      jtmh+9Gs+wKagvbVt3vnkOBIEbcqQV8jBCDoa4QABH2NEICgrxECEPQ1QgCCvkYIQNDXeIsF
      ajVYX1+n3jLJbKfI5Ip0zCY7uSKO45DNpOlY3kMHBIKTwpMA1laXsSUF1W6xuplB13UWFxdp
      lNIszs1R7cL8wlKvfBUIjhxPoRATFy6Sz6VZ2XKYnhpjeWmRUNDP0GCUR0/XuXn1Gql6Bdu2
      z8/CWIcIbDsX9e4TPAmgVilTKNUYSEbI7WQxAiGCms3CeobrN2aYv3+fweHxc7UwlmM5eL2c
      z0O9+wURC/QGRCzQ+UaMAgn6GiEAQV8jBCDoa4QABH2NEICgrxECEPQ1QgCCvkYIQNDXeJqy
      3FxZoNTsMD42xuryMnogSkA2KdZaTE2OsbqZJjaQZGZqrFf+CgRHiicB+AwDqnWy2QzJiRka
      pQxtVK5NT/Dw8SrvfOVLz5LkiVggwdnAkwBkRcXv1+nYCjtba8iqhiF1WFlPMTaWYHF2Dk3V
      RSzQOah3v+DpTMUHk/hDMfx+g07bRFZ1ZGzaHQufTyfZaqEbRq98FQiOHI8tgEIg4AdA9z2/
      0GUMZXczht9/pM4JBL1GjAIJ+hohAEFfIwQg6GuEAAR9jRCAoK8RAhD0NUIAgr7G25Sl4/Cb
      X/6cK7fvsvBkluTYJLRKFKotLk6Ns7KWIp4Y4dLkSI/cFQiOFk8C2NlaJRBJ0O3Y+AydWq2G
      JstcvTT2LBboi89igZIiFkhwJvAkAMuGUj6NFAgSjw+SzRWQdYnNrQwjwzHWllZwHFXEAp2D
      evcLns7U6OQlkqMTICs0qhWGhofRJId6q0M4FKBaKRMMR3vlq0Bw5Hi+VSmqBkA4GnvxXUTT
      d3/v+U4gOAuIUSBBXyMEIOhrDnSBHj18QD69hhqf5qvv3TgJnwSCY+NAC2BWc8jhEcKGchL+
      CATHysGHYAcymyusmhbJ8UlG4sETcEsgOB4OtAD1Vpu3377O0GCc1ObWSfgkEBwbBwQQD/n4
      0Y/+D6GhCW6+NX0SPgkEx8aBLlDFhD/90+8Qjg3g0w4+B6wuzpOcvMj22hK+yBABuU26UOfK
      zAUW5uZITsyQiIluk+BscEAAkxNjZLI7SJqfwVh43/8a5SzpnQJaMIAaSlIvZakBE4kwDz95
      xPSdO6RXFhmIXMG2baxDxNGcOmzvWS/PRb37hH0CWJ29x/JWgXQ6DUaMqfHkPuPUVhqrXSdX
      KBOJ6jiOg8PuCVcUGatr4TggSdKLnzPPIepwLurdJ+wTwMW37rCz89fouo6iHJwju3L9FmPj
      JRQjSHpjhdjQCH6pQ7pY58btGywvLDI6Of3i4pflsz/P5hziYj4P9e4XDnSBypUKPsNAe01E
      YzCyG+9zcebqi++ig7u/r14XyeEEZ4sDV3k0PsR773yBkOE7CX8EgmPlQFut0uYvfvhDHi6s
      nYQ/AsGxckAARiCEZLcx2+KtJsH55+BMcEcmFjZoVMsn4Y9AcKzsewbY2dnh1vXLlC5dodtu
      npRPAsGxsa8FWFlapLC9yma+wdqaeAYQnH/2tQATw3F++3gRSDF19dYJuSQQHB/7BDA+fZ1Q
      JEaubjEYO/hye6fVIJMvMzI6TCGTBs1PPGxQqrVIDMTI7WSIJZJor5hEEwhOIwfmAR7cf0Aq
      m2f0wjW+9pUv7PufabaoFtOYnQ6riwtMX7tBIZPC8KmUchnUUJTswjLXr83gOA72IeJoTh2O
      47nIuah3n7BPAN1Oh1t33iW8sc30lWsHjP2BIJFolHpb4uu/83UePXqEz+cjHg2xvLrDxYuX
      MasVAJxDXDinkZOuh9O16P520X0BWUb74pXeOXTO2CeA7bV5Pn44v/vBiHDnrUv7jMvFPOVq
      i+RonMX5OWKJESK6TapQ59adGyzMPyU5MfMiDug8xMQ4sozX+/lR1tuRHWTTw5yMfD5isI6L
      fQKwuh2i0SjpdJpO5+BBH0iOMZDczQGciMdffB8f2v19/YZ4cBacLfbdKiZnruM4Dl/74B/S
      bdZOyieB4NjYJwC70yKfSfE3P/0F8aHhk/JJIDg29nWBtECUkZERBpJjRIIi36/g/HPgaSmg
      yzydnSWdK56EPwLBsXJgHiAQDJEcixAUK3wL+oADLUClWuPJJx+xma2chD8CwbFy4D4/OHKB
      7773ZTa2sifhj0BwrBxoAcrZTX76s59RbhycB+i2TXK5PJbtUKuWabW7dDsmpUoNx3EoFwt0
      7fMxAyzoDw60AJ2uze33vkLipTWBAJrNBu1Ggac7ud0lURwbTbJQZImiqmMqPuydIm9fmzkW
      5wWCz8vBl+KjYT7+6BdMv3Wbm1en9v0v6DdYXCziD0UIx0dplDLYqIwnYzx8vLYnSZ4tkuQd
      2f69B9adi+N+TBwQQNs08UcGcF7xRlihkEc3/PiMELmtZfRgjIDcZn5li7fevsjsvXvEh0ZF
      krwjrLeDJZL09ZADR8p2YPnpPYz3fueAcWJkgsTIxO6HqYkX3z9vJ+4+DwoSCM4I+wSwtfSE
      xY1tvvLNP+Hm5fGT8kkgODb2jQItb6SYmZ7h/q9+IoZBBX3BPgG8884dgsEQ7733Hj5dOymf
      BIJjY18XKDIwRGRA9ONPFbZFY+6Ba3NJVdE+uNlDh84XYrjglON0u5R/8heu7SVdJ/LvvtND
      j84X4t05QV8jBCDoa4QABH2Np2eAUi7NZjpDJJ4kk9okOTYJZplCpcnFqXFW1lLEE6NcmhSv
      UwrOBp4EEBscpljIo6saPkOnVquhyRJXL43x8PHqnligIRELdEQ4Jx2LdM7xJICVuYd0fHEG
      AxoD8QQ7uTyyLrG5lWF4OMba8iqOo4hYoCOsd8cn8fSDJ67tFdVg8hwc9+PC05EauTBNvdFC
      0/1EIg6JZBJNdqi3OoRDAaqVMoHwwTVFBZ8PW/UQEerFVuBNAP5ACH8gtPu3T3/xfUTb/TsS
      jR2hawJB7xGjQIK+RghA0NcIAQj6GjFccMqRgEj44PvZr0NRxIp+XhACOOUoisKtt667LyDp
      b7YRvEB0gQR9jRCAoK/x1AWqFnOsb2UYv3CJ/PYavsgQAblNulDnyswFFubmSE5eJhEN9Mpf
      gUdsq82vf/TvXdtLksKX//h/9NCj04W3ibBwjIkRk821VUIDw9RLWWrARCLMw08eMX3nDumV
      RQbCV7BtG+sQcSynjkMkvDvSen/O/dtWl1LmnuuykqScj/PmEm8tQCFDoQmXLgyRqdi7q8Ox
      e8BlRcayLBwHJEl68XPmOUQdjrLeh1locu/+D+PLuThvLvEkALPdwaw3acYmkMxtYokR/M+6
      QDdv32BpYYHRZ0nynifKO+s4h7gYjjRJnuN9W3v379gn6/9px1sw3MRFRp79PRj9dGw6Orj7
      +9r1G0fll0BwLPSP1AWCV9DziTDH7GCtZFzbS7qKMj3yZkOB4AjouQDMhsnCzx+5ttejQa4J
      AQiOiZ4LoN3usry249o+OBjhWg/9EQj20nMBdANd0u+nXdtHQ2YPvREI9tP7ZwDNxpx0n3Cv
      4xPBXILjo+cCiDldvmu7bwFkkWNMcIx4Hgat1WqAzU56i518kY7ZJJsv4TgOuZ0MnUOk9BEI
      TgpPAqiWctx7+BS73WBlI42maSwuLlIrbLM0P0e5bTO/sNwrXwWCI8dTFygcSzAQ3UFS/Vy6
      MMry0hKhoJ9kIsqjp+vcvHKN1OLCviR5tsfAKsdxTtfCTie8MFXXcvh5/bZre0XW+Oae/Xs9
      /tBfC2t5Xhoxl8uxvTNAOVfA8AcJaA4La2mu35hh/v59BobH9y2MZSmKJ4ckSdq3sJTV6VJK
      5V2Xl1WF+ETC0z4/i5NeGMvC4aF52f2+ZZlv7T1+nr3vryR73pZGTIzwwQe7k1RjI59OVk0+
      +/3uuwNH5thz6s0aP/rp/3ZtHwpH+PbEd4/cD8H55NRLvatbpG4WXNvHfKfrIbzdMPmb//pD
      1/aaT+N3v/dPe+iRYC+nXgBNU+HD37pP2zQcDsOtHjrkEcdxMKsHcy6/DqvTP/3v00DPBdDp
      dtjYSrm214Nw5e0eOiQQ7OEYBNBlPeVeAIGoypU9n4d9Jv/zC/ddl1d8gx68E/Q7p74LJAGG
      4r5fL8mn6xlAUiWM237X9pom0tMeJ6deAO12m3uP3IdTG6FRvnTKXkyTfe7nGyVVvKN0nJx6
      AdiOTb3ZcG+vun/gFAhOvQDOPl3sxseurW3dD/xx79wR7MPbsiilHA/n1vjy3bd58PApWjBK
      QG5TrDaZmhxjdTNNbHCYmQujvfL37GG3savuE13behj4T73zR7APz7FAsfAOjXqZoYkZGqUM
      bUfh2vTEsyR5X3qWJG/4RSyQ50WWXooF8lrecY44luVzxtJ4X2Rqf/273c+3fxEL9Nl4EkCt
      UiSbzZIcGiC7vY6kqPikDqvrW4yNDbI0N48qa/tigRSPsUC8FAvktbwkHW0sy+eNBbK91p+X
      YqEOsTSWKmKBXOOppj4jwN27d9F9BtfDUWRVR5EczI6F4dMZajbxGe6H/ASCk8aTADTdh6b7
      nn968b1f2d2MPyAWxRWcLXq/KoQaZ378P7q2jwdPV6ZJ2zHZrv9f1/aK7mccEctxVui5AGxJ
      o2FMubY3fKerFZGULrGxp+7tVffpjAQnj5h2FPQ1p/5x35Z0yoG3XNt3/ckeeiM4buqFKsu/
      dN8CB+IhZr7qvgt66gXQUSOsjP5b1/ZRMQp1rmhVGix/NOvaPj6ZOF0CUOtVkv/vz13bRxLD
      8P7XeujR8dJVAjy49F9c2/tUjW/20J8zhywhGe5zHEi6t179MbQADpLtfjbSi+3ZQMKW3a92
      Z8unvlE+ViR9G230v7u2VxM3gD9wb38In8Dp8OTRU4LxJEG1S7pQ5+rlC8zPzpOcnCEZD70w
      NYwAt7/wvutN+8LRQ7kkOKc4Ftjul9bErnva/KEEYLVNKo0WoUGZfLnO1HCYh5884crdu2wv
      z5OI7k2S5xAMuR8a1PyB/UnePCeJc440yZtziHWN9u7fOkSLtq/8IVbaO8ryJ43X8//y8X8T
      hxKApPp49867zM4+QdM02u0OmqZgmiaWzb4cYaraIR574Hrbij+BLP/hp/vynKPraHOT2R63
      9XJutMP4cpTlHfls5wiTvfrvMTfdoTucm+vLJMcmCWk26UKdG7dvsLK4xMTUpX1ZImXZwu/P
      ut6u7JP3XfSyJGF4uIv5bPtIsxx+3iyLEp+z/CGqcr6yRHrzRcKb/4cSgKxozFz5NI1FOLa7
      Etvla+7H690S73T53uaW+wKh0P7PjQb89V+5L28Y8I+/9eKjZVmsbmy4Lq76orx9ipZlEXw2
      537IoWo5/K+dtmv7YFDhu3s+W5ZFKr3turxutEQk0Bni3AtAVU1mLv3Gtb3PF0W8ktg/nHoB
      dCWJgu5+qRBZ09i7NK7WsLj55+7v4EqsBf9oz/ZkmcGI+7WGVN/pimYVfDZnQAAaKW3atb2u
      GfsEgA120f1bVdJLb2Dpjp8vNf6F6/LYhntbwYlzZAJwHId8Lkt0IIGmHN0wmoSEbvvebPgM
      zd4/69oxOjz+uod1hYLDjO/53JZk7oVDr7V/GdXn465ra8GbsGWdpu4+ba5f87ZC+ZEJoJxe
      o9TVySwsc+Mt9+vZ9xpF1Ribdr9SluaL7/tsyhI/HnDfrQlouhDAEdL0jTE3+T3X9mMRb13Q
      IxNArdZm9PIUqYWFo9rkkdAkxF8q/9q1fUjxiVGcPuLIBJAcG+LxvfsMJMffbHyMaJLDLQ+r
      xRkvHREFmxE156H80T4DSA6Mtjuu7VXZ6yoUpxvddhhvuc8dPeTff6xqxSUe/fw/v9b+yASg
      B+O8+278zYbHjCE3+CDyl67tJS0GfDoRZshtvh35mfvyahj45x48/GxkYNyDAGQPCwm7wXYc
      /tsv73kq8x++cmffbOzaox/guFzexQgmGbn0ey8+h7H4B7hfGtNw9r9S28TPPK/vAkuO4xx5
      Yl7btimXyyiKguNYOJ2D0XwOzqvDBCQZWYti2zayLOPYDt3WwQvAcZxXT3lLoPn1T8t73r+E
      rMWwX4RUODid8mvKP9vhZ5aHqvmqO9jzw76/vCRB2GfsK2+2Wq8o7jwrerAOht/P3tNq1nde
      6f9u6Zf93x0I+LS8RKPjLTguqCsvykuSRKue4eXr/3X7lxUN3T+w5/xbdNuvOH6O88o4EUmS
      UZ8dPzfleyIAgEqlQiQSOXT55xX4POWfxyOJ8sdffq8ADrv/z3v+3ZTvedhfsVg8VLnnzter
      FczXLA/YbDZp1OuvbFxlWX7lwe+06tSabw6NkGUZx+qwtrpCoVyj0Wjw8r2i9ao780v7z+9s
      s7axhf0KJ81W67Udg73+d80mG5vbtJoH7ev1V8e/Py/fqldIpbO86jb3urLPy3fNJisrK+RL
      1dfaOVabZvvg+ZEkia7ZYGVlhUr99cfps/ZvW21W37D/RqOB/YrKfXrxWzSb+1uAvedN+f73
      v/99z965wDRNNMnkV79+wPDEBNnUGo2ORGknRcuSyaU36Tgq+e11WrZCaSdFvSMRDu5/p3dx
      9gH1jgLdBusbWwQDflZXluiisp3aRNd1ZLvD4tIq4fgA6hvCZ9eWFsiWGwR9KpncDvc+/hjF
      CBMNBw/Ytkp5quhsr68SDgawOiZraxuo/iD57XXmVjaIBlTWtrLomkR2J0ejXiZfaRKL7M4d
      bKa2iKottusK+e01JM1PpZAmW6pTKxWQVYlup8vy8hqReBzlZf8dm4ePnjA8OkJmY42dQgF/
      MMza0iKO6qPbbmE26xTLVbLpFLZiEDB250Icq83j2SVGhhOYtTJrWxnCPomFlQ0UzaBjNmnV
      ymznKyiOxU6+SK2UpdayCYcCVHfWsUOjDIR9bK4uUqyZYHeh26ZpmqyurhNSWqyWZOrZDVqW
      TGjP+SumFrHDk8QMiaWlBWQ9QGZjFbNr8+uPfkkwEGRzcwu/4WNtbZWOoxAKfDqI0G1kSVcU
      xoaCVKomrWYds1UnX6pSzqfJlRtosoPdMVnZ2CIWH+Dg6W+yuJglMRhiZXGejqSzOv+YmmkT
      0KXezgSvL61gBGSWV1bRVI3LQYu5UoALcoO5rTyRZhe12wAjRK1aJ6juvwidboPtXA21to6T
      jHNpLMr8copwIkFhJw1ANpuFWIhuM8/KZonrFz9jIsSxSW1nMB2VuGahxsdIjo4xOfq6JHwO
      25ub6JqPXDaL36eSHBkhk1lHsoMkB6LMzc4hywqddpPhsSnK6VVs7dN61MtFWk0V7BQjMzOk
      1xdw1AB+pUG90SRdrjMQ0Jieufpq8ToWqs9PJBymqKgMjyXJbG5Sb7UpLC0T9mtYnTbXrl/j
      aSaDETGBXfHZHRMjFCUSDvPkyQbjQ2FWV1YIT9wis7WI43Qp5QvIviBmRWd85ipby3P4pN2L
      0HEsNtdX0S6M0WzbqHaDbL0CsoTZqGEjk82btNtNtFiSQnabkaFPB0Icx2ZzfRV9NEbLNFlc
      XMZQLNRQnNGxcfKZFJYksbm2iTE0TK2Ug8SecXzHIb21yVDEJldxkLo17E6by9dvsrJURFVb
      5HNVgoEAnU6brmWjvqbbY3VNag2TTGmJRCyG0a3y28fp3rYApgU3btyiVSvTblax1CCtYhrJ
      F8JqNxkYSiJZXbqOhE8B0wZNkeiYJqphUMllGb98nYgG5VqVfKHGyPAAa+urRAeGMHQVXddx
      bIuOZeEPhJFkMJstDOPg7HGnWcIXm2B6OEjR1BgZGcBuVik2rVe2AHa3Q6FcRdN0ouEgfsMg
      EAxh2RLVQhrTlhmMBnE0P/FYlIF4HLNRo9rsMDy0Gz9ULuVxHJnB5DCZ1AbB2BBSu0ajIzE4
      OEg8rCOrOltbGQy/D9vq0mrb+PRn9yZJplnJk9opEAoGCUfDtGpV6m0bw28QCvgJhSPEwiHK
      lQrIKvHo7ht4sqJR3EmRLdYI+iTSuSpDMT/Lm1mGhpJoioShK/gCEWLRCPGBKI1qhVbHYWgw
      TtdsUKq3CYVC6KqMpmmMJUJslS0mEmFqpsVwIg7+KLWdDTR/GE2R6HbaKJqO1TZJTFzGcJqU
      ak18RgCfArakIncbKKqPrqMylIjjC4aQbQvbtumYJprPALuDPzLM6FCUrfU1WrZEcihBPBal
      3W6jaRqaquI3DCqVCoGAH9uBZtPE8D2PCLBYXlhGUiUaDRPDH0CymlQ7ChPJGP8fqshilDJN
      XnEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
